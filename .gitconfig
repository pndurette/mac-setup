# Inspirations:
# https://phrye.com/tools/git-includes/
# https://dzone.com/articles/how-to-use-gitconfigs-includeif
# https://medium.com/doing-things-right/platform-specific-gitconfigs-and-the-wonderful-includeif-7376cd44994d

# General includes

[include]
	# GPG keys path, ignored silently if not exist
	# TODO: make a git-crypt with keys
	path = ~/.config/git/gpg

# OS-specific includes

[includeIf "gitdir:/Users"]
    path = ~/.config/git/os_macos
[includeIf "gitdir:/home"]
    path = ~/.config/git/os_linux

# General

[core]
    editor = vim

[user]
	name = Pierre Nicolas Durette

[gpg]
	program = gpg

# Repo-specific overrides

[includeIf "gitdir:~/repos/work/"]
	path = ~/.config/git/conf_work
[includeIf "gitdir:~/repos/perso/"]
	path = ~/.config/git/conf_perso
[includeIf "gitdir:~/"]
	# Special case for yadm/dotfiles (i.e. perso)
	path = ~/.config/git/conf_perso

# Aliases
[alias]
	cm = checkout main
	pull = !git pull origin $(git rev-parse --abbrev-ref HEAD)
	push = !git push origin $(git rev-parse --abbrev-ref HEAD)
	# Checks out a new branch of the form <ticketkey>-<ticketnumber>_<branchname>
	# Where <ticketkey> is the value of user.ticketkey in gitconfig and
	#       <branchname> is an underscore-ified string of the remaining arguments (description)
	# Usage: git gb <ticketnumber> <>
	gb = "!f(){ \
		BRANCH_PREFIX=$(git config user.ticketkey | tr '[:upper:]' '[:lower:]')-$1 && \
		BRANCH_SUFFIX=$(echo ${@:2} | tr '[:upper:]' '[:lower:]' | tr ' ' '_') && \
		git checkout -b ${BRANCH_PREFIX}_${BRANCH_SUFFIX} ; \
		}; f"